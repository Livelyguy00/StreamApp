{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Frontend\\\\kursReact\\\\Streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderError(meta) {\n    if (meta.touched) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form__error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  renderInput({\n    input,\n    meta\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, input.name), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      type: \"text\",\n      className: \"form__input\"\n    }, input, {\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, this.renderError(meta)));\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn--primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must name your stream';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must add a description to your stream';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["D:/Projekty/Frontend/kursReact/Streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderError","meta","touched","renderInput","input","name","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACd,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;AACF;;AAEDC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,KAAF;AAASH,IAAAA;AAAT,GAAF,EAAmB;AAC5B,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCG,KAAK,CAACC,IAAtC,CADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC;AAFZ,OAGMD,KAHN;AAIE,MAAA,YAAY,EAAC,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,eAQE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,WAAL,CAAiBC,IAAjB,CADH,CARF,CADF;AAcD;;AAEDK,EAAAA,QAAQ,CAACC,UAAD,EAAY;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAM,MAAA,QAAQ,EAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAjB;AAA0D,MAAA,SAAS,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAG,KAAKH,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAG,KAAKA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD;;AAxCwC;;AA2C3C,MAAMU,QAAQ,GAAIN,UAAD,IAAgB;AAC/B,QAAMO,MAAM,GAAG,EAAf;;AACA,MAAG,CAACP,UAAU,CAACQ,KAAf,EAAqB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,2BAAf;AACD;;AACD,MAAG,CAACR,UAAU,CAACS,WAAf,EAA2B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,2CAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAVD;;AAYA,eAAejB,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE,cADiB;AAEvBJ,EAAAA;AAFuB,CAAD,CAAT,CAGZf,YAHY,CAAf","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamCreate extends React.Component {\r\n  renderError(meta){\r\n    if(meta.touched){\r\n      return(\r\n        <div className='form__error'>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderInput ({ input, meta }) {\r\n    return (\r\n      <div className='form__group'>\r\n        <label className='form__label'>{input.name}</label>\r\n        <input \r\n          type='text' \r\n          className='form__input' \r\n          {...input}\r\n          autoComplete='off'\r\n        />\r\n        <div className='form__message'>\r\n          {this.renderError(meta)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit(formValues){\r\n    console.log(formValues)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <form onSubmit={ this.props.handleSubmit(this.onSubmit) } className='form'>\r\n        <Field name='title' component={ this.renderInput }/>\r\n        <Field name='description' component={ this.renderInput }/>\r\n        <button className='btn btn--primary'>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {}\r\n  if(!formValues.title){\r\n    errors.title = 'You must name your stream';\r\n  }\r\n  if(!formValues.description){\r\n    errors.description = 'You must add a description to your stream'\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'streamCreate',\r\n  validate\r\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}