{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Frontend\\\\kursReact\\\\Streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput({\n    input,\n    meta\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, input.name), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      type: \"text\",\n      className: \"form__input\"\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, meta.error)));\n  }\n\n  onSubmit(formValues) {\n    validate(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn--primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must name your stream';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must add a description to your stream';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["D:/Projekty/Frontend/kursReact/Streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","meta","name","error","onSubmit","formValues","validate","render","props","handleSubmit","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAF,EAAmB;AAC5B,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,KAAK,CAACE,IAAtC,CADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC;AAFZ,OAGMF,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,eAOE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACE,KADR,CADF,CAPF,CADF;AAeD;;AAEDC,EAAAA,QAAQ,CAACC,UAAD,EAAY;AAClBC,IAAAA,QAAQ,CAACD,UAAD,CAAR;AACD;;AAEDE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAM,MAAA,QAAQ,EAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKL,QAA7B,CAAjB;AAA0D,MAAA,SAAS,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAG,KAAKL,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAG,KAAKA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD;;AA/BwC;;AAkC3C,MAAMO,QAAQ,GAAID,UAAD,IAAgB;AAC/B,QAAMK,MAAM,GAAG,EAAf;;AACA,MAAG,CAACL,UAAU,CAACM,KAAf,EAAqB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,2BAAf;AACD;;AACD,MAAG,CAACN,UAAU,CAACO,WAAf,EAA2B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,2CAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAVD;;AAYA,eAAed,SAAS,CAAC;AACvBiB,EAAAA,IAAI,EAAE,cADiB;AAEvBP,EAAAA;AAFuB,CAAD,CAAT,CAGZT,YAHY,CAAf","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamCreate extends React.Component {\r\n  renderInput ({ input, meta }) {\r\n    return (\r\n      <div className='form__group'>\r\n        <label className='form__label'>{input.name}</label>\r\n        <input \r\n          type='text' \r\n          className='form__input' \r\n          {...input}\r\n        />\r\n        <div className='form__message'>\r\n          <div className='form__error'>\r\n            {meta.error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit(formValues){\r\n    validate(formValues)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <form onSubmit={ this.props.handleSubmit(this.onSubmit) } className='form'>\r\n        <Field name='title' component={ this.renderInput }/>\r\n        <Field name='description' component={ this.renderInput }/>\r\n        <button className='btn btn--primary'>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {}\r\n  if(!formValues.title){\r\n    errors.title = 'You must name your stream';\r\n  }\r\n  if(!formValues.description){\r\n    errors.description = 'You must add a description to your stream'\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'streamCreate',\r\n  validate\r\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}